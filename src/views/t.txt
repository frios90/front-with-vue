var VERSION = "v0.6"; // TODO: Bump when pushing new version in production
var FORCE_MODAL = false;

// Register service worker for PWA
if ("serviceWorker" in navigator) {
  navigator.serviceWorker.register("sw.js");
}

function storageAvailable(type) {
  try {
    var storage = window[type],
      x = "__storage_test__";
    storage.setItem(x, x);
    storage.removeItem(x);
    return true;
  } catch (e) {
    console.warn("Your browser blocks access to " + type);
    return false;
  }
}

function shouldShowModalOnStartup() {
  if (FORCE_MODAL) {
    return true;
  }
  if (!storageAvailable("localStorage")) {
    return true;
  }
  if (window.localStorage["lastModalShown"] !== VERSION) {
    return true;
  }
  return false;
}

document.addEventListener("DOMContentLoaded", function () {
  // ============
  // Handle modal
  // ============
  var modal = new tingle.modal({
    footer: false,
    closeMethods: ["overlay", "button", "escape"],
    closeLabel: "Go to map",
  });
  modal.setContent(document.querySelector("#modal-content").innerHTML);
  [].forEach.call(
    modal.modalBoxContent.querySelectorAll("a.modalClose"),
    function (item) {
      item.addEventListener("click", function (event) {
        event.preventDefault();
        modal.close();
      });
    }
  );
  if (shouldShowModalOnStartup()) {
    modal.open();

    if (storageAvailable("localStorage")) {
      window.localStorage["lastModalShown"] = VERSION;
    }
  }

  // ==========
  // Handle map
  // ==========
  // Available tiles definition
  var cyclosm = L.tileLayer(
    "https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png",
    {
      attribution:
        'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
      minZoom: 0,
      maxZoom: 20,
    }
  );
  var cyclosm_live = L.tileLayer(
    "https://dev.{s}.tile.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png",
    {
      attribution:
        'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
      minZoom: 0,
      maxZoom: 20,
    }
  );
  var osm = L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
    attribution:
      'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
    minZoom: 0,
    maxZoom: 19,
  });
  var piano = L.tileLayer(
    "https://{s}.piano.tiles.quaidorsay.fr/fr/{z}/{x}/{y}.png",
    {
      attribution:
        'Tiles <a href="https://github.com/tilery/pianoforte">PianoFr</a> | &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
      minZoom: 0,
      maxZoom: 20,
    }
  );
  var ocm = L.tileLayer(
    "https://tile.thunderforest.com/cycle/{z}/{x}/{y}.png",
    {
      attribution:
        'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
      minZoom: 0,
      maxZoom: 18,
    }
  );
  var otm = L.tileLayer("https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png", {
    attribution:
      'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
    minZoom: 0,
    maxZoom: 18,
  });
  var cyclosm_lite = L.tileLayer(
    "https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm-lite/{z}/{x}/{y}.png",
    {
      attribution: "CyclOSM Lite",
      minZoom: 11,
      maxZoom: 20,
    }
  );
  var cyclosm_be = L.tileLayer(
    "https://{s}.tiles.champs-libres.be/cyclosm/{z}/{x}/{y}.png",
    {
      attribution:
        'MNT 2013-2014 &copy; SPW; DHM Vlaanderen II &copy; Vlaanderen. Tiles courtesy of <a href="https://www.champs-libres.coop/blog/post/2020-09-17-cyclosm/">Champs-Libres</a>.',
      minZoom: 11,
      maxZoom: 20,
    }
  );
  var waymarked_trails = L.tileLayer(
    "https://tile.waymarkedtrails.org/cycling/{z}/{x}/{y}.png",
    {
      attribution:
        '<a href="https://cycling.waymarkedtrails.org/">https://cycling.waymarkedtrails.org/</a>',
      minZoom: 0,
      maxZoom: 18,
    }
  );
  var map = new L.Map("map", {
    zoomControl: true,
    layers: [cyclosm],
  });
  map.attributionControl.setPrefix(
    '<a href="http://leafletjs.com" title="A JS library for interactive maps">Leaflet</a> | <a href="https://github.com/cyclosm/cyclosm-cartocss-style/releases" title="CyclOSM - Open Bicycle render">CyclOSM</a> ' +
      VERSION
  );
  if (!map.restoreView()) {
    // Default view on Amsterdam
    map.setView([52.3727598, 4.8936041], 12);
  }

  // Set up layers control
  var baseMaps = {
    CyclOSM: cyclosm,
    "CyclOSM (Live)": cyclosm_live,
    "CyclOSM (better for BE)": cyclosm_be,
    "OpenStreetMap.org": osm,
    OpenCycleMap: ocm,
    OpenTopoMap: otm,
    "OSM Piano": piano,
  };
  var overlayMaps = {
    "Waymarked Trails": waymarked_trails,
    "CyclOSM Lite": cyclosm_lite,
  };
  L.control.layers(baseMaps, overlayMaps, { collapsed: true }).addTo(map);

  // Set up hash plugin
  var allMapLayers = {
    cyclosm: cyclosm,
    cyclosm_live: cyclosm_live,
    cyclosm_be: cyclosm_be,
    piano: piano,
    openstreetmap: osm,
    opencyclemap: ocm,
    opentopomap: otm,
    waymarkedtrails: waymarked_trails,
    cyclosmlite: cyclosm_lite,
  };
  L.hash(map, allMapLayers);

  // Set up geocoder plugin
  var geocoder = L.Control.geocoder({
    defaultMarkGeocode: false,
    position: "topleft",
  });
  geocoder.on("markgeocode", function (e) {
    map.fitBounds(e.geocode.bbox);
  });
  geocoder.addTo(map);
  document.querySelector("button.leaflet-control-geocoder-icon").title =
    "Search";

  // Set up geolocation plugin
  L.control.locate().addTo(map);

  // Add a scale
  L.control.scale().addTo(map);

  // Set up routing / edit / help / legend buttons
  L.easyButton(
    "fa-route",
    function (btn, map) {
      window.open(
        "http://brouter.de/brouter-web/" + window.location.hash,
        "_blank"
      );
    },
    "Create an itinerary with BRouter"
  ).addTo(map);
  L.easyButton(
    "fa-edit",
    function (btn, map) {
      window.open(
        "https://www.openstreetmap.org/edit" + window.location.hash,
        "_blank"
      );
    },
    "Edit the map"
  ).addTo(map);
  L.easyButton(
    "fa-question",
    function (btn, map) {
      window.open("legend.html", "_blank");
    },
    "Legend"
  ).addTo(map);
  L.easyButton(
    "fa-info",
    function (btn, map) {
      modal.open();
    },
    "About"
  ).addTo(map);

  // =============
  // Handle legend
  // =============
  function handleResize() {
    var shouldLegendOpen = true;

    if (screen.width > 800) {
      shouldLegendOpen = true;
    } else {
      shouldLegendOpen = false;
    }
    if (
      storageAvailable("localStorage") &&
      window.localStorage.isLegendOpen !== undefined
    ) {
      shouldLegendOpen = JSON.parse(window.localStorage.isLegendOpen);
    }

    if (shouldLegendOpen) {
      document.querySelector("#map").style.right = "300px";
      document.querySelector("#legend .iframe").style.display = "initial";
      document.querySelector("#legend").style.width = "300px";
      document.querySelector("#legend button").innerText = "❯";
    } else {
      document.querySelector("#map").style.right = "42px";
      document.querySelector("#legend .iframe").style.display = "none";
      document.querySelector("#legend").style.width = "42px";
      document.querySelector("#legend button").innerText = "❮";
    }
  }
  handleResize();
  window.addEventListener("resize", handleResize());
  document
    .querySelector("#legend button")
    .addEventListener("click", function (event) {
      event.preventDefault();

      if (document.querySelector("#legend button").innerText == "❮") {
        if (storageAvailable("localStorage")) {
          window.localStorage.isLegendOpen = JSON.stringify(true);
        }
        document.querySelector("#map").style.right = "300px";
        document.querySelector("#legend .iframe").style.display = "initial";
        document.querySelector("#legend").style.width = "300px";
        document.querySelector("#legend button").innerText = "❯";
      } else {
        if (storageAvailable("localStorage")) {
          window.localStorage.isLegendOpen = JSON.stringify(false);
        }
        document.querySelector("#map").style.right = "42px";
        document.querySelector("#legend .iframe").style.display = "none";
        document.querySelector("#legend").style.width = "42px";
        document.querySelector("#legend button").innerText = "❮";
      }
      map.invalidateSize();
    });
});














h mm m  - . .. ..


. . . ..                      o .ooooooooooooooooooooonnnoonmooonnoibbbbbbbbbbbbbbbbLsSSSSSSSSSSSSSSSSSSSSSSSS   shouldShowModalOnStartup
G8         7       fa|||||||||||||0036



mvnfnfnffkfxkfx mmrmjmgjvhv       